teste <- read.fwf('/home/asainpe/Área de Trabalho/apresentação metodologia/hurricane.csv', widths = c(4,6,8,12,4,6,20))
ggplot(teste,aes(x=teste$V2,y=teste$V3))+ geom_path(aes(group = 1), arrow = arrow(),color='blue')
View(teste)
plot(teste$V2)
plot(teste$V3,add=T)
plot(teste$V2)
plot(teste$V2,teste$V3)
readOGR(dsn,"hurricane.csv")
teste2 <- read.csv("/home/asainpe/Área de Trabalho/apresentação metodologia/hurricane.csv",stringsAsFactors = FALSE)
ste(teste2)
str(teste2)
o <- str(teste2)
plot(o)
plot(teste2)
View(teste2)
teste2 <- read.csv("/home/asainpe/Área de Trabalho/apresentação metodologia/hurricane.csv",stringsAsFactors = FALSE,sep = "|")
View(teste2)
teste2$ADV..LAT....LON......TIME.....WIND..PR..STAT
teste2
plot(teste)
names(teste2)
names(teste)
library("tidyverse", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
df <- read_csv('/home/asainpe/Área de Trabalho/apresentação metodologia/hurricane.csv')
df <- read_csv('/home/asainpe/Área de Trabalho/apresentação metodologia/hurricane.csv')
dir(".")
teste2<- read_csv('./hurricane.csv')
teste2 <- st_read("./hurricane.csv")
teste2 <- st_read("./hurricane.csv")
teste2 <- st_read("./hurricane.csv")
df <- read_csv('/home/asainpe/Área de Trabalho/apresentação metodologia/hurricane.csv')
read.csv('./hurricane.csv')
teste3 <- read.csv('./hurricane.csv')
teste3
plot(teste3)
View(teste3)
teste
df <- data.frame(x=(teste$V2),y=(teste$V3))
df
df[,2]
plot(df)
df[1]
df[[2]]
names(teste)
teste <- read.fwf('/home/asainpe/Área de Trabalho/apresentação metodologia/hurricane.csv', widths = c(6,8,12,4,6,20))
teste$V2
View(teste)
teste <- read.fwf('/home/asainpe/Área de Trabalho/apresentação metodologia/hurricane.csv', widths = c(2,6,8,12,4,6,20))
View(teste)
teste <- read.fwf('/home/asainpe/Área de Trabalho/apresentação metodologia/hurricane.csv', widths = c(4,6,8,12,4,6,20))
names(teste)=c("ADV", "LAT", "LON", "TIME", "WIND", "PR", "STAT")
teste
View(teste)
teste$LAT
plot(teste$LAT)
ggplot(teste,aes(x=teste$LAT))+geom_point()
ggplot(teste,aes(x=teste$LAT,y=teste$LON))+geom_point()
ggplot(teste,aes(x=teste$LAT,y=teste$LON))+geom_lines()
ggplot(teste,aes(x=teste$LAT,y=teste$LON))+geom_line()
ggplot(teste,aes(x=teste$LAT,y=teste$LON))+geom_point()
mapview(teste)
st_read('./hurricane.csv')
st_layers('./hurricane.csv')
df <- st_point(c(teste$LAT:teste$LON))
teste$LAT[1]
teste$LAT[2]
teste$LAT[2]
plot(teste$LAT[2])
dsn <- '/home/asainpe/Área de Trabalho/'
dsn <- '/home/asainpe/Área de Trabalho/'
tes <- read_sf('/home/asainpe/Área de Trabalho/al092017-001_5day_pts.shp')
tes <- readOGR(dsn,'al092017-001_5day_pts.shp')
tes <- readOGR(dsn,'al092017-001_5day_pts')
ogrListLayers(dsn)
dsn <- '/home/asainpe/Área de Trabalho/al092017_5day_001/'
ogrListLayers(dsn)
read_sf
read_sf(dsn, "al092017-001_5day_lin")
tes2 <- read_sf(dsn, "al092017-001_5day_lin")
plot(tes2)
mapview(tes2)
tes3 <- readOGR(dsn, "al092017-001_5day_lin")
library("mapview", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("rgdal", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("spacetime", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("tidyverse", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("trajectories", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
tes3 <- readOGR(dsn, "al092017-001_5day_lin")
plot(tes3)
tes2 <- read_sf(dsn, "al092017-001_5day_lin")
library("sf", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
tes2 <- read_sf(dsn, "al092017-001_5day_lin")
mapview(tes2)
mapview(tes2)
library("TrajDataMining", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
sf <- read_sf("./inst/extdata/elephant_tracking_40_41.kml")
sf <- read_sf("41: locations")
dsn <- "./inst/"
sf <- read_sf(dsn,"41: locations")
sf <- read_sf("./inst//41: locations")
dsn
dsn <- '/home/asainpe/Área de Trabalho/al092017_5day_001/'
ogrListLayers(dsn)
tes4 <- read_sf(dsn, "al092017-001_5day_pgn")
plot(tes4)
viewmap(tes4)
mapview(tes4)
dsn <- '/home/asainpe/Área de Trabalho/teste2'
ogrListLayers(dsn)
tes4 <- read_sf(dsn, "al112017-001_5day_lin")
mapview(tes4)
ogrListLayers(dsn)
tes4 <- read_sf(dsn, "al112017-011_5day_lin")
View(tes4)
mapview(tes4)
ogrListLayers(dsn)
ogrListLayers(dsn)
tes4 <- read_sf(dsn, "AL112017_052adv_TRACK")
mapview(tes4)
plot(tes4)
tes4
View(tes4)
ogrListLayers(dsn)
tes4 <- read_sf(dsn, "Forecast Track")
plot(tes4)
mapview(tes4)
mapview(tes4)
ogrListLayers(dsn)
tes4 <- read_sf(dsn, "al112017-049A_5day_lin")
mapview(tes4)
ogrListLayers(dsn)
tes3 <- read_sf(dsn, "al112017-048_5day_lin")
mapview(tes3)
st_join(tes4,tes3)
testeeee<- st_join(tes4,tes3)
mapview(testeeee)
st_join(tes3,tes4,join=st_intersects)
teste5 <- st_join(tes3,tes4,join=st_intersects)
mapview(teste5)
dsn
ogrListLayers(dsn)
teste0<- readOGR(dsn,"al112017-048_5day_lin")
View(teste0)
teste0
teste$LAT
teste0@data
teste0@lines
teste0@lines
teste0@lines[,1]
teste0@lines[[1]]
teste0@lines[[1]][,1]
teste0@lines[[1]]
data <- data.frame(ola-=("ola"),tudo=("tudo"))
data <- data.frame(ola=("ola"),tudo=("tudo"))
data$ola
data$tudo
names(data)
View(A1)
library("TrajDataMining", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
View(A1)
library(TrajDataMining)
library("trajectories", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("xts", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("spacetime", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("sp", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("elephant sea Trajectory")+xlab("X")+ ylab("Y")+theme_classic()
df <- data.frame(x=A1@sp@coords[,1],y=A1@sp@coords[,2])
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("elephant sea Trajectory")+xlab("X")+ ylab("Y")+theme_classic()
max <- max(A1@connections$distance)
douglasp <- douglasPeucker(A1,max)
df <- data.frame(x=douglasp@sp@coords[,1],y=douglasp@sp@coords[,2])
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Douglas Peucker")+xlab("X")+ ylab("Y")+theme_classic()
sf <- speedFilter(A1,0.01)
df <- data.frame(x=sf@sp@coords[,1],y=sf@sp@coords[,2])
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Speed Filter")+xlab("X")+ ylab("Y")+theme_classic()
libraty(TrajDataMining)
library(TrajDataMining)
library("spacetime", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("sp", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("RPostgreSQL", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("rgdal", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
partner(A1,A2,110792,2277,0,FALSE)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
install.packages("h2o")
library("h2o", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
h2o.init
h2o.init()
??h2o
predictions
View(predictions)
plot(predictions)
TracksCollection()
A1
library(TrajDataMining)
library(sp)
library(spacetime)
spacetime::plot(tracksCollection)
spacetime::plot(A1)
plot(A1)
plot(trackscox)
plot(tracksCollection)
detach("package:h2o", unload=TRUE)
detach("package:spacetime", unload=TRUE)
plot(A1)
names()
dir*()
dir()
ls()
A1
df <- coordinates(A1)
df
df[,0]
df[,1]
df[,2]
plot (df[,2])
plot (df[,1])
plot (df[,1] )
plot (df[,2],add=T)
plot (df[,2],add=TRUE)
plot (df[,1],add=TRUE)
plot (df[,2],add=TRUE)
plot (df[,1],add=TRUE)
plot (df[,2],add=TRUE)
plot (df[,1],add=T)
plot (df[,2],add=T)
ggplot(df,aes(x= df[,1],df[,2])) + geom_path()
ggplot(df,aes(x= df[,1]y = ,df[,2])) + geom_path()
ggplot(df,aes(x= df[,1],y = df[,2])) + geom_path()
library(ggplot2)
ggplot(df,aes(x= df[,1],y = df[,2])) + geom_path()
ggplot(df,aes(x= df[,1],y = df[,2])) + geom_pom
ggplot(df,aes(x= df[,1],y = df[,2])) + geom_point()
plot (df[,1])
plot (df[,1]+df[,2])
plot (df[,1]+df[,2])
plot (df[,1] + df[,2])
plot (df[,2] + df[,''])
plot (df[,2] + df[,1])
library(devtools)
devtools::check()
devtools::document()
install.packages("googleVis")
install.packages("ISOcodes")
ow <- owMeratniaByCollection(tracksCollection,13804.84, 0.03182201)
plot(ow)
plot(ow)
plot(tracksCollection,add=T)
ssplot(ow)
spplot(ow)
sp::plot(ow)
ow@tracksCollectionData
df <- coordinates(ow)
df
View(df)
plot(df)
pot <- coordinates(tracksCollection)
pot
View(pot)
devtools::document()
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Speed Filter")+xlab("X")+ ylab("Y")+theme_classic()
df <- data.frame(x = (df[,1]),y=(df[,2]))
df
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Speed Filter")+xlab("X")+ ylab("Y")+theme_classic()
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')
ggplot(df,aes(x=df$x,y=df$y))+geom_point()
dsn <- "/home/asainpe"
library(rgdalo)
library(rgdal)
ogrListLayers(dsn)
teste <- readOGR(dsn,"Estados")
plot(teste)
ggplot(df,aes(x=df$x,y=df$y),add=T)+geom_point()
plot(df)
plot(teste)
plot(teste)
plot(df,add=T)
plot(teste)
plot(df,add=TRUE)
plot(teste,type= "1")
par(new=TRUE)
plot(teste,df,type="1")
par(new=TRUE)
plot(df,type="1")
g <- ggplot(df,aes(x,y))
g
g + geom_point()
g + geom_line()
dfest <- coordinates (teste)
dfest
plot(dfest)
plot(ow)
plot(ow)
plot(estados,add=T)
plot(teste,add=T)
plot(df)
plot(teste,add=T)
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Speed Filter")+xlab("X")+ ylab("Y")+theme_classic()
plot(teste,add=T)
plot(teste,add=T)
df <- coordinates (o)
df <- coordinates (ow)
plot(df)
plot(estados,add=T)
plot(teste,add=T)
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Speed Filter")+xlab("X")+ ylab("Y")+theme_classic()
df
df$x1
df.x1
df.x
df.y
df <- data.frame(x=(df[,1]]),y=(df[,2]))
df <- data.frame(x=(df[,1]),y=(df[,2]))
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Speed Filter")+xlab("X")+ ylab("Y")+theme_classic()
plot(df)
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Speed Filter")+xlab("X")+ ylab("Y")+theme_classic()
ggplot(df,aes(x=df$x,y=df$y))+geom_point(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Speed Filter")+xlab("X")+ ylab("Y")+theme_classic()
ggplot(df,aes(x=df$x,y=df$y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')+ggtitle("Method Speed Filter")+xlab("X")+ ylab("Y")+theme_classic()
ow <- owMeratniaByCollection(tracksCollection,13804.84, 0.03182201) %>% coordinates()
library("magrittr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
ow <- owMeratniaByCollection(tracksCollection,13804.84, 0.03182201) %>% coordinates()
ow
ow <- owMeratniaByCollection(tracksCollection,13804.84, 0.03182201) %>% coordinates() %>%data.frame(x=(ow[,1]),y(=[,2])
ow <- owMeratniaByCollection(tracksCollection,13804.84, 0.03182201) %>% coordinates() %>%data.frame(x=(ow[,1]),y(ow=[,2])
ow <- owMeratniaByCollection(tracksCollection,13804.84, 0.03182201) %>% coordinates() %>%data.frame(x=([,1]),y(ow=[,2])
ow <- owMeratniaByCollection(tracksCollection,13804.84, 0.03182201) %>% coordinates() %>%data.frame(x=[,1],y=ow[,2])
ow <- owMeratniaByCollection(tracksCollection,13804.84, 0.03182201) %>% coordinates() %>%data.frame(x=[,1],y=[,2])
ow <- owMeratniaByCollection(tracksCollection,13804.84, 0.03182201) %>% coordinates() %>%data.frame(x=ow[,1],y=ow[,2])
ow$x
plot(ow)
plot(df)
#'
View(A1)
View(A1)
devtools::document()
devtools::document()
library(TrajDataMining)
library(devtools)
library(TrajDataMining)
library(devtools)
devtools::document()
library()
library(TrajDataMining)
devtools::add_path
devtools::check()
avgSpeed <- mean(A1@connections$speed)
avgSpeed
minSpeed <- min(A1@connections$speed)
speed <- speedCluster(A1,avgSpeed,minSpeed,586)
ow <-owMeratniaByCollection(tracksCollection,13804.84 ,0.03182201) %>% coordinates()
library(magrittr)
ow <-owMeratniaByCollection(tracksCollection,13804.84 ,0.03182201) %>% coordinates()
ow <-owMeratniaByCollection(tracksCollection,13804.84 ,0.03182201)
plot(ow)
sp::plot(ow)
owC <- coordinates()
ow <-owMeratniaByCollection(tracksCollection,13804.84 ,0.03182201) %>% coordinates()
library(spacetime)
library(sp)
ow <-owMeratniaByCollection(tracksCollection,13804.84 ,0.03182201) %>% coordinates()
df <- data.frame(x=ow[,1],y=ow[,2])
plot(df)
ggplot(df,aes(x=x,y=y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')
library(ggplot2)
ggplot(df,aes(x=x,y=y))+geom_path(aes(group = 1), arrow = arrow(),color='blue')
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
View(A1)
A1.time <- as.list(A1@time)
class (A1.time)
typeof(A1.time)
A1.time
View(A1.time)
cluster <- createSpatialCluster(A1,A1.time)
A1.time <- as.numeric(A1@time)
A1.time
A1.time <- as.numeric(as.list(A1@time))
A1.time <- as.numeric(A1@sp@coords)
A1.time
cluster <- createSpatialCluster(A1,A1.time)
A1[,2]
A1[1,2]
A1[2,2]
A1[2,1]
A1[,1]
A1@sp@coords[,2]
A1@sp@coords[i,2]
A1@sp@coords[1,2]
A1@sp@coords[2,2]
A1@sp@coords[2,1]
cluster <- createSpatialCluster(A1,A1.time)
A1@sp@coords
View(A1.time)
df<- as.numeric(coordinates(A1))
df
A1.time <- A1@sp@coords
plot(df)
plot(A1.time)
class(A1.time)
typeof(A1.time)
as.numeric(A1.time)
teste <- as.numeric(A1.time)
cluster <- createSpatialCluster(A1,A1.time)
df <- as.data.frame(x=A1@sp@coords[,1],y=A1@sp@coords[,2])
class(df)
typeof(df)
df.numeric <- as.data.frame.numeric(df)
df.numeric
df.numeric <- as.data.frame.numeric(df$`A1@sp@coords[, 1]`)
df.numeric
class (df.numeric)
teste <- numeric(df.numeric)
teste <- as.numeric(df.numeric)
teste[1:4436]
plot(teste)
View(teste)
class(A1@sp@coords)
typeof(A1@sp@coords)
class(as.numeric(A1@sp@coords))
length(as.numeric(A1@sp@coords))
class(as.integer(A1@sp@coords))
typeof(as.integer(A1@sp@coords))
createSpatialCluster(A1,A1@sp@coords)
levels(A1)
df.teste <- levels(A1)
df.teste
nes <- as.numeric(A1@time)
nes
createSpatialCluster(A1,nes)
cluster <- createSpatialCluster(A1,nes)
plot(cluster)
cluster@polygons
plot(cluster@polygons)
teste <- as.numeric(1:1000000)
teste
cluster <- createSpatialCluster(A1,teste)
teste <- as.numeric(1:2218)
cluster <- createSpatialCluster(A1,teste)
cluster
plot(cluster)
View(cluster)
cluster
cluster <- createSpatialCluster(A2,teste)
teste <- as.numeric(1:19)
cluster <- createSpatialCluster(A1,teste)
cluster
plot(cluster)
teste <- as.numeric(1:2000)
teste <- as.numeric(1:200)
cluster <- createSpatialCluster(A1,teste)
plot(cluster)
devtools::check()
devtools::check()
library(TrajDataMining)
library(devtools)
devtools::check()
dkhg
douglasPeucker(A1,1)
devtools::test()
devtools::test()
devtools::test()
devtools::document()
devtools::check()
devtools::load_all()
avgSpeed <- mean(A1@connections$speed)
minSpeed <- min(A1@connections$speed)
speed <- speedCluster(A1,avgSpeed,minSpeed,586)
devtools::load_all()
speed <- speedCluster(A1,avgSpeed,200,586)
speed
speedCluster(A1,avgSpeed,200,586)
devtools::load_all()
speedCluster(A1,avgSpeed,200,586)
devtools::check()
devtools::check()
speedCluster(A1,avgSpeed,200,586)
